using MinimalApiRest.Models;

var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

// In-memory data store for items
var items = new List<Item>
{
    new Item { Id = 1, Name = "Item 1", Description = "Description for Item 1" },
    new Item { Id = 2, Name = "Item 2", Description = "Description for Item 2" }
};

// GET: /api/items
app.MapGet("/api/items", () =>
{
    return Results.Ok(items);
});

// GET: /api/items/{id}
app.MapGet("/api/items/{id}", (int id) =>
{
    var item = items.FirstOrDefault(i => i.Id == id);
    return item is not null ? Results.Ok(item) : Results.NotFound();
});

// POST: /api/items
app.MapPost("/api/items", (Item newItem) =>
{
    newItem.Id = items.Max(i => i.Id) + 1; // Generate a new ID
    items.Add(newItem);
    return Results.Created($"/api/items/{newItem.Id}", newItem);
});

// PUT: /api/items/{id}
app.MapPut("/api/items/{id}", (int id, Item updatedItem) =>
{
    var item = items.FirstOrDefault(i => i.Id == id);
    if (item is null)
        return Results.NotFound();

    item.Name = updatedItem.Name;
    item.Description = updatedItem.Description;
    return Results.NoContent();
});

// DELETE: /api/items/{id}
app.MapDelete("/api/items/{id}", (int id) =>
{
    var item = items.FirstOrDefault(i => i.Id == id);
    if (item is null)
        return Results.NotFound();

    items.Remove(item);
    return Results.NoContent();
});

app.Run();
